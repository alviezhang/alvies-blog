{"componentChunkName":"component---src-templates-blog-post-js","path":"/archives/2015-02-26-nonlocal-statement-in-python3/","result":{"data":{"site":{"siteMetadata":{"title":"Alvie's Blog"}},"markdownRemark":{"id":"12f4a9ea-d630-579f-802a-9dd06db3b1b9","excerpt":"最近在看 Python 3，其中变量作用域增加了  关键字，用来指定非全局、非本地作用域外的封闭作用域中的变量。 语句会让所列标示符引用之前的最近封闭作用域的绑定变量，除了全局作用域外。\n但是必须引用之前封闭作用域存在的变量（global…","html":"<p>最近在看 Python 3，其中变量作用域增加了 <code class=\"language-text\">nonlocal</code> 关键字，用来指定非全局、非本地作用域外的封闭作用域中的变量。</p>\n<div class=\"gatsby-highlight\" data-language=\"peg\"><pre class=\"language-peg\"><code class=\"language-peg\">nonlocal_stmt ::=  &quot;nonlocal&quot; identifier (&quot;,&quot; identifier)*</code></pre></div>\n<blockquote>\n<p><code class=\"language-text\">nonlocal</code>语句会让所列标示符<code class=\"language-text\">identifier</code>引用之前的最近封闭作用域的绑定变量，除了全局作用域外。\n但是<code class=\"language-text\">nonlocal</code>必须引用之前封闭作用域存在的变量（global则可以声明不存在的）。\n而且<code class=\"language-text\">nonlocal</code>语句所声明的标示符不能与已有的本地变量重名。</p>\n</blockquote>\n<p>例子：</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">scope_test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">do_local</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        spam <span class=\"token operator\">=</span> <span class=\"token string\">\"local spam\"</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">do_nonlocal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">nonlocal</span> spam\n        spam <span class=\"token operator\">=</span> <span class=\"token string\">\"nonlocal spam\"</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">do_global</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">global</span> spam\n        spam <span class=\"token operator\">=</span> <span class=\"token string\">\"global spam\"</span>\n\n    spam <span class=\"token operator\">=</span> <span class=\"token string\">\"test spam\"</span>\n    do_local<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"After local assignment:\"</span><span class=\"token punctuation\">,</span> spam<span class=\"token punctuation\">)</span>\n    do_nonlocal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"After nonlocal assignment:\"</span><span class=\"token punctuation\">,</span> spam<span class=\"token punctuation\">)</span>\n    do_global<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"After global assignment:\"</span><span class=\"token punctuation\">,</span> spam<span class=\"token punctuation\">)</span>\n\nscope_test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"In global scope:\"</span><span class=\"token punctuation\">,</span> spam<span class=\"token punctuation\">)</span></code></pre></div>\n<p>输出结果是：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">After local assignment: test spam\nAfter nonlocal assignment: nonlocal spam\nAfter global assignment: nonlocal spam\nIn global scope: global spam</code></pre></div>\n<p>注意局部的赋值 (默认) 并没有改变 <code class=\"language-text\">scope_test</code> 绑定的 <code class=\"language-text\">spam</code>. 而 <code class=\"language-text\">nonlocal</code> 则改变了 <code class=\"language-text\">scope_test</code> 中的 <code class=\"language-text\">spam</code>, 而 <code class=\"language-text\">global</code> 则改变了模块级别的绑定。\n可以看到在 <code class=\"language-text\">global</code> 赋值之前并没有绑定 <code class=\"language-text\">spam</code> 的值.</p>\n<p>有了 <code class=\"language-text\">nonlocal</code> 语句，Python的闭包就不只能只读访问非本地作用域的变量了。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">nonlocal</span> count\n        <span class=\"token keyword\">nonlocal</span> num\n        num <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"num is %d\"</span> <span class=\"token operator\">%</span> num<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bar invoke %d times\"</span> <span class=\"token operator\">%</span> count<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> bar\n\nfunc <span class=\"token operator\">=</span> foo<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\nfunc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nfunc<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>运行结果：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">num is 11\nbar invoke 1 times\nnum is 12\nbar invoke 2 times</code></pre></div>\n<p>参考文献：</p>\n<p><a href=\"https://docs.python.org/3/reference/simple_stmts.html#the-nonlocal-statement\">The nonlocal statement</a></p>\n<p><a href=\"https://docspy3zh.readthedocs.io/en/latest/tutorial/classes.html#tut-scopes\">Python 的作用域和命名空间</a></p>","frontmatter":{"title":"Python 3 中的 nonlocal 语句","date":"February 26, 2015","description":null}},"previous":{"fields":{"slug":"/archives/2015-01-26-fix-launchpad-empty/"},"frontmatter":{"title":"修复 LaunchPad 空文件夹"}},"next":{"fields":{"slug":"/archives/2015-03-17-refresh-object-in-sqlalchemy/"},"frontmatter":{"title":"SQLAlchemy 获取 AutoField 值"}}},"pageContext":{"id":"12f4a9ea-d630-579f-802a-9dd06db3b1b9","previousPostId":"97f4956a-3bf0-5d96-8248-8594ccfde145","nextPostId":"413188ab-e65c-58f4-92d8-a92290978f94"}},"staticQueryHashes":["2841359383","3257411868"]}